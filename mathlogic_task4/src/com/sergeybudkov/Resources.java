package com.sergeybudkov;

public class Resources {

    public static String[] forall_res = new String[83];
    public static String[] exist_res = new String[107];
    public void init(){
        forall_res[0] = "(A77&B77->A77)->(A77&B77->(A77->B77->C77))->(A77&B77->(B77->C77))";
        forall_res[1] = "A77&B77->A77";
        forall_res[2] = "(A77&B77->(A77->B77->C77))->(A77&B77->(B77->C77))";
        forall_res[3] = "(A77->B77->C77)";
        forall_res[4] = "(A77->B77->C77)->(A77&B77->(A77->B77->C77))";
        forall_res[5] = "(A77&B77->(A77->B77->C77))";
        forall_res[6] = "(A77&B77->B77->C77)";
        forall_res[7] = "(A77&B77->B77)->(A77&B77->B77->C77)->(A77&B77->C77)";
        forall_res[8] = "A77&B77->B77";
        forall_res[9] = "(A77&B77->B77->C77)->(A77&B77->C77)";
        forall_res[10] = "(A77&B77->C77)";
        forall_res[11] = "(A77&B77->@v77C77)";
        forall_res[12] = "(((A77->(B77->(A77&B77)))->(B77->(A77->(B77->(A77&B77)))))->(A77->((A77->(B77->(A77&B77)))->(B77->(A77->(B77->(A77&B77)))))))";
        forall_res[13] = "((A77->(B77->(A77&B77)))->(B77->(A77->(B77->(A77&B77)))))";
        forall_res[14] = "(A77->((A77->(B77->(A77&B77)))->(B77->(A77->(B77->(A77&B77))))))";
        forall_res[15] = "((A77->(B77->(A77&B77)))->(A77->(A77->(B77->(A77&B77)))))";
        forall_res[16] = "(A77->(B77->(A77&B77)))";
        forall_res[17] = "(A77->(A77->(B77->(A77&B77))))";
        forall_res[18] = "((A77->(A77->(B77->(A77&B77))))->((A77->((A77->(B77->(A77&B77)))->(B77->(A77->(B77->(A77&B77))))))->(A77->(B77->(A77->(B77->(A77&B77)))))))";
        forall_res[19] = "((A77->((A77->(B77->(A77&B77)))->(B77->(A77->(B77->(A77&B77))))))->(A77->(B77->(A77->(B77->(A77&B77))))))";
        forall_res[20] = "(A77->(B77->(A77->(B77->(A77&B77)))))";
        forall_res[21] = "((A77->(B77->A77))->(A77->(A77->(B77->A77))))";
        forall_res[22] = "(A77->(B77->A77))";
        forall_res[23] = "(A77->(A77->(B77->A77)))";
        forall_res[24] = "(A77->((A77->A77)->A77))";
        forall_res[25] = "(A77->(A77->A77))";
        forall_res[26] = "((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77)))";
        forall_res[27] = "((A77->((A77->A77)->A77))->(A77->A77))";
        forall_res[28] = "(A77->A77)";
        forall_res[29] = "((A77->A77)->((A77->(A77->(B77->A77)))->(A77->(B77->A77))))";
        forall_res[30] = "((A77->(A77->(B77->A77)))->(A77->(B77->A77)))";
        forall_res[31] = "(A77->(B77->A77))";
        forall_res[32] = "(((B77->A77)->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))->(A77->((B77->A77)->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))))";
        forall_res[33] = "((B77->A77)->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))";
        forall_res[34] = "(A77->((B77->A77)->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77))))))";
        forall_res[35] = "((A77->(B77->A77))->((A77->((B77->A77)->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77))))))->(A77->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))))";
        forall_res[36] = "((A77->((B77->A77)->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77))))))->(A77->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77))))))";
        forall_res[37] = "(A77->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))";
        forall_res[38] = "((A77->(B77->(A77->(B77->(A77&B77)))))->((A77->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))->(A77->(B77->(B77->(A77&B77))))))";
        forall_res[39] = "((A77->((B77->(A77->(B77->(A77&B77))))->(B77->(B77->(A77&B77)))))->(A77->(B77->(B77->(A77&B77)))))";
        forall_res[40] = "(A77->(B77->(B77->(A77&B77))))";
        forall_res[41] = "((B77->((B77->B77)->B77))->(A77->(B77->((B77->B77)->B77))))";
        forall_res[42] = "(B77->((B77->B77)->B77))";
        forall_res[43] = "(A77->(B77->((B77->B77)->B77)))";
        forall_res[44] = "((B77->(B77->B77))->(A77->(B77->(B77->B77))))";
        forall_res[45] = "(B77->(B77->B77))";
        forall_res[46] = "(A77->(B77->(B77->B77)))";
        forall_res[47] = "(((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77)))->(A77->((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77)))))";
        forall_res[48] = "((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77)))";
        forall_res[49] = "(A77->((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77))))";
        forall_res[50] = "((A77->(B77->(B77->B77)))->((A77->((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77))))->(A77->((B77->((B77->B77)->B77))->(B77->B77)))))";
        forall_res[51] = "((A77->((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77))))->(A77->((B77->((B77->B77)->B77))->(B77->B77))))";
        forall_res[52] = "(A77->((B77->((B77->B77)->B77))->(B77->B77)))";
        forall_res[53] = "((A77->(B77->((B77->B77)->B77)))->((A77->((B77->((B77->B77)->B77))->(B77->B77)))->(A77->(B77->B77))))";
        forall_res[54] = "((A77->((B77->((B77->B77)->B77))->(B77->B77)))->(A77->(B77->B77)))";
        forall_res[55] = "(A77->(B77->B77))";
        forall_res[56] = "(((B77->B77)->((B77->(B77->(A77&B77)))->(B77->(A77&B77))))->(A77->((B77->B77)->((B77->(B77->(A77&B77)))->(B77->(A77&B77))))))";
        forall_res[57] = "((B77->B77)->((B77->(B77->(A77&B77)))->(B77->(A77&B77))))";
        forall_res[58] = "(A77->((B77->B77)->((B77->(B77->(A77&B77)))->(B77->(A77&B77)))))";
        forall_res[59] = "((A77->(B77->B77))->((A77->((B77->B77)->((B77->(B77->(A77&B77)))->(B77->(A77&B77)))))->(A77->((B77->(B77->(A77&B77)))->(B77->(A77&B77))))))";
        forall_res[60] = "((A77->((B77->B77)->((B77->(B77->(A77&B77)))->(B77->(A77&B77)))))->(A77->((B77->(B77->(A77&B77)))->(B77->(A77&B77)))))";
        forall_res[61] = "(A77->((B77->(B77->(A77&B77)))->(B77->(A77&B77))))";
        forall_res[62] = "((A77->A77)->((A77->(A77->(B77->(A77&B77))))->(A77->(B77->(A77&B77)))))";
        forall_res[63] = "((A77->(A77->(B77->(A77&B77))))->(A77->(B77->(A77&B77))))";
        forall_res[64] = "(A77->(B77->(A77&B77)))";
        forall_res[65] = "((((A77&B77)->@v77C77)->(B77->((A77&B77)->@v77C77)))->(A77->(((A77&B77)->@v77C77)->(B77->((A77&B77)->@v77C77)))))";
        forall_res[66] = "(((A77&B77)->@v77C77)->(B77->((A77&B77)->@v77C77)))";
        forall_res[67] = "(A77->(((A77&B77)->@v77C77)->(B77->((A77&B77)->@v77C77))))";
        forall_res[68] = "(((A77&B77)->@v77C77)->(A77->((A77&B77)->@v77C77)))";
        forall_res[69] = "((A77&B77)->@v77C77)";
        forall_res[70] = "(A77->((A77&B77)->@v77C77))";
        forall_res[71] = "((A77->((A77&B77)->@v77C77))->((A77->(((A77&B77)->@v77C77)->(B77->((A77&B77)->@v77C77))))->(A77->(B77->((A77&B77)->@v77C77)))))";
        forall_res[72] = "((A77->(((A77&B77)->@v77C77)->(B77->((A77&B77)->@v77C77))))->(A77->(B77->((A77&B77)->@v77C77))))";
        forall_res[73] = "(A77->(B77->((A77&B77)->@v77C77)))";
        forall_res[74] = "(((B77->(A77&B77))->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))->(A77->((B77->(A77&B77))->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))))";
        forall_res[75] = "((B77->(A77&B77))->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))";
        forall_res[76] = "(A77->((B77->(A77&B77))->((B77->((A77&B77)->@v77C77))->(B77->@v77C77))))";
        forall_res[77] = "((A77->(B77->(A77&B77)))->((A77->((B77->(A77&B77))->((B77->((A77&B77)->@v77C77))->(B77->@v77C77))))->(A77->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))))";
        forall_res[78] = "((A77->((B77->(A77&B77))->((B77->((A77&B77)->@v77C77))->(B77->@v77C77))))->(A77->((B77->((A77&B77)->@v77C77))->(B77->@v77C77))))";
        forall_res[79] = "(A77->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))";
        forall_res[80] = "((A77->(B77->((A77&B77)->@v77C77)))->((A77->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))->(A77->(B77->@v77C77))))";
        forall_res[81] = "((A77->((B77->((A77&B77)->@v77C77))->(B77->@v77C77)))->(A77->(B77->@v77C77)))";
        forall_res[82] = "(A77->(B77->@v77C77))";
        exist_res[0] = "((A77->((A77->A77)->A77))->(B77->(A77->((A77->A77)->A77))))";
        exist_res[1] = "(A77->((A77->A77)->A77))";
        exist_res[2] = "(B77->(A77->((A77->A77)->A77)))";
        exist_res[3] = "((A77->(A77->A77))->(B77->(A77->(A77->A77))))";
        exist_res[4] = "(A77->(A77->A77))";
        exist_res[5] = "(B77->(A77->(A77->A77)))";
        exist_res[6] = "(((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77)))->(B77->((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77)))))";
        exist_res[7] = "((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77)))";
        exist_res[8] = "(B77->((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77))))";
        exist_res[9] = "((B77->(A77->(A77->A77)))->((B77->((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77))))->(B77->((A77->((A77->A77)->A77))->(A77->A77)))))";
        exist_res[10] = "((B77->((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77))))->(B77->((A77->((A77->A77)->A77))->(A77->A77))))";
        exist_res[11] = "(B77->((A77->((A77->A77)->A77))->(A77->A77)))";
        exist_res[12] = "((B77->(A77->((A77->A77)->A77)))->((B77->((A77->((A77->A77)->A77))->(A77->A77)))->(B77->(A77->A77))))";
        exist_res[13] = "((B77->((A77->((A77->A77)->A77))->(A77->A77)))->(B77->(A77->A77)))";
        exist_res[14] = "(B77->(A77->A77))";
        exist_res[15] = "(((A77->(B77->C77))->(A77->(A77->(B77->C77))))->(B77->((A77->(B77->C77))->(A77->(A77->(B77->C77))))))";
        exist_res[16] = "((A77->(B77->C77))->(A77->(A77->(B77->C77))))";
        exist_res[17] = "(B77->((A77->(B77->C77))->(A77->(A77->(B77->C77)))))";
        exist_res[18] = "((A77->(B77->C77))->(B77->(A77->(B77->C77))))";
        exist_res[19] = "(A77->(B77->C77))";
        exist_res[20] = "(B77->(A77->(B77->C77)))";
        exist_res[21] = "((B77->(A77->(B77->C77)))->((B77->((A77->(B77->C77))->(A77->(A77->(B77->C77)))))->(B77->(A77->(A77->(B77->C77))))))";
        exist_res[22] = "((B77->((A77->(B77->C77))->(A77->(A77->(B77->C77)))))->(B77->(A77->(A77->(B77->C77)))))";
        exist_res[23] = "(B77->(A77->(A77->(B77->C77))))";
        exist_res[24] = "(((A77->A77)->((A77->(A77->(B77->C77)))->(A77->(B77->C77))))->(B77->((A77->A77)->((A77->(A77->(B77->C77)))->(A77->(B77->C77))))))";
        exist_res[25] = "((A77->A77)->((A77->(A77->(B77->C77)))->(A77->(B77->C77))))";
        exist_res[26] = "(B77->((A77->A77)->((A77->(A77->(B77->C77)))->(A77->(B77->C77)))))";
        exist_res[27] = "((B77->(A77->A77))->((B77->((A77->A77)->((A77->(A77->(B77->C77)))->(A77->(B77->C77)))))->(B77->((A77->(A77->(B77->C77)))->(A77->(B77->C77))))))";
        exist_res[28] = "((B77->((A77->A77)->((A77->(A77->(B77->C77)))->(A77->(B77->C77)))))->(B77->((A77->(A77->(B77->C77)))->(A77->(B77->C77)))))";
        exist_res[29] = "(B77->((A77->(A77->(B77->C77)))->(A77->(B77->C77))))";
        exist_res[30] = "((A77->(B77->C77))->(B77->(A77->(B77->C77))))";
        exist_res[31] = "(A77->(B77->C77))";
        exist_res[32] = "(B77->(A77->(B77->C77)))";
        exist_res[33] = "((B77->(A77->B77))->(B77->(B77->(A77->B77))))";
        exist_res[34] = "(B77->(A77->B77))";
        exist_res[35] = "(B77->(B77->(A77->B77)))";
        exist_res[36] = "(B77->((B77->B77)->B77))";
        exist_res[37] = "(B77->(B77->B77))";
        exist_res[38] = "((B77->(B77->B77))->((B77->((B77->B77)->B77))->(B77->B77)))";
        exist_res[39] = "((B77->((B77->B77)->B77))->(B77->B77))";
        exist_res[40] = "(B77->B77)";
        exist_res[41] = "((B77->B77)->((B77->(B77->(A77->B77)))->(B77->(A77->B77))))";
        exist_res[42] = "((B77->(B77->(A77->B77)))->(B77->(A77->B77)))";
        exist_res[43] = "(B77->(A77->B77))";
        exist_res[44] = "(((A77->B77)->((A77->(B77->C77))->(A77->C77)))->(B77->((A77->B77)->((A77->(B77->C77))->(A77->C77)))))";
        exist_res[45] = "((A77->B77)->((A77->(B77->C77))->(A77->C77)))";
        exist_res[46] = "(B77->((A77->B77)->((A77->(B77->C77))->(A77->C77))))";
        exist_res[47] = "((B77->(A77->B77))->((B77->((A77->B77)->((A77->(B77->C77))->(A77->C77))))->(B77->((A77->(B77->C77))->(A77->C77)))))";
        exist_res[48] = "((B77->((A77->B77)->((A77->(B77->C77))->(A77->C77))))->(B77->((A77->(B77->C77))->(A77->C77))))";
        exist_res[49] = "(B77->((A77->(B77->C77))->(A77->C77)))";
        exist_res[50] = "((B77->(A77->(B77->C77)))->((B77->((A77->(B77->C77))->(A77->C77)))->(B77->(A77->C77))))";
        exist_res[51] = "((B77->((A77->(B77->C77))->(A77->C77)))->(B77->(A77->C77)))";
        exist_res[52] = "(B77->(A77->C77))";
        exist_res[53] = "(?v77B77->(A77->C77))";
        exist_res[54] = "(((?v77B77->(A77->C77))->(?v77B77->(?v77B77->(A77->C77))))->(A77->((?v77B77->(A77->C77))->(?v77B77->(?v77B77->(A77->C77))))))";
        exist_res[55] = "((?v77B77->(A77->C77))->(?v77B77->(?v77B77->(A77->C77))))";
        exist_res[56] = "(A77->((?v77B77->(A77->C77))->(?v77B77->(?v77B77->(A77->C77)))))";
        exist_res[57] = "((?v77B77->(A77->C77))->(A77->(?v77B77->(A77->C77))))";
        exist_res[58] = "(?v77B77->(A77->C77))";
        exist_res[59] = "(A77->(?v77B77->(A77->C77)))";
        exist_res[60] = "((A77->(?v77B77->(A77->C77)))->((A77->((?v77B77->(A77->C77))->(?v77B77->(?v77B77->(A77->C77)))))->(A77->(?v77B77->(?v77B77->(A77->C77))))))";
        exist_res[61] = "((A77->((?v77B77->(A77->C77))->(?v77B77->(?v77B77->(A77->C77)))))->(A77->(?v77B77->(?v77B77->(A77->C77)))))";
        exist_res[62] = "(A77->(?v77B77->(?v77B77->(A77->C77))))";
        exist_res[63] = "((?v77B77->((?v77B77->?v77B77)->?v77B77))->(A77->(?v77B77->((?v77B77->?v77B77)->?v77B77))))";
        exist_res[64] = "(?v77B77->((?v77B77->?v77B77)->?v77B77))";
        exist_res[65] = "(A77->(?v77B77->((?v77B77->?v77B77)->?v77B77)))";
        exist_res[66] = "((?v77B77->(?v77B77->?v77B77))->(A77->(?v77B77->(?v77B77->?v77B77))))";
        exist_res[67] = "(?v77B77->(?v77B77->?v77B77))";
        exist_res[68] = "(A77->(?v77B77->(?v77B77->?v77B77)))";
        exist_res[69] = "(((?v77B77->(?v77B77->?v77B77))->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))->(A77->((?v77B77->(?v77B77->?v77B77))->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))))";
        exist_res[70] = "((?v77B77->(?v77B77->?v77B77))->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))";
        exist_res[71] = "(A77->((?v77B77->(?v77B77->?v77B77))->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77))))";
        exist_res[72] = "((A77->(?v77B77->(?v77B77->?v77B77)))->((A77->((?v77B77->(?v77B77->?v77B77))->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77))))->(A77->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))))";
        exist_res[73] = "((A77->((?v77B77->(?v77B77->?v77B77))->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77))))->(A77->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77))))";
        exist_res[74] = "(A77->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))";
        exist_res[75] = "((A77->(?v77B77->((?v77B77->?v77B77)->?v77B77)))->((A77->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))->(A77->(?v77B77->?v77B77))))";
        exist_res[76] = "((A77->((?v77B77->((?v77B77->?v77B77)->?v77B77))->(?v77B77->?v77B77)))->(A77->(?v77B77->?v77B77)))";
        exist_res[77] = "(A77->(?v77B77->?v77B77))";
        exist_res[78] = "(((?v77B77->?v77B77)->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77))))->(A77->((?v77B77->?v77B77)->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77))))))";
        exist_res[79] = "((?v77B77->?v77B77)->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77))))";
        exist_res[80] = "(A77->((?v77B77->?v77B77)->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77)))))";
        exist_res[81] = "((A77->(?v77B77->?v77B77))->((A77->((?v77B77->?v77B77)->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77)))))->(A77->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77))))))";
        exist_res[82] = "((A77->((?v77B77->?v77B77)->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77)))))->(A77->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77)))))";
        exist_res[83] = "(A77->((?v77B77->(?v77B77->(A77->C77)))->(?v77B77->(A77->C77))))";
        exist_res[84] = "((?v77B77->(A77->C77))->(A77->(?v77B77->(A77->C77))))";
        exist_res[85] = "(?v77B77->(A77->C77))";
        exist_res[86] = "(A77->(?v77B77->(A77->C77)))";
        exist_res[87] = "((A77->(?v77B77->A77))->(A77->(A77->(?v77B77->A77))))";
        exist_res[88] = "(A77->(?v77B77->A77))";
        exist_res[89] = "(A77->(A77->(?v77B77->A77)))";
        exist_res[90] = "(A77->((A77->A77)->A77))";
        exist_res[91] = "(A77->(A77->A77))";
        exist_res[92] = "((A77->(A77->A77))->((A77->((A77->A77)->A77))->(A77->A77)))";
        exist_res[93] = "((A77->((A77->A77)->A77))->(A77->A77))";
        exist_res[94] = "(A77->A77)";
        exist_res[95] = "((A77->A77)->((A77->(A77->(?v77B77->A77)))->(A77->(?v77B77->A77))))";
        exist_res[96] = "((A77->(A77->(?v77B77->A77)))->(A77->(?v77B77->A77)))";
        exist_res[97] = "(A77->(?v77B77->A77))";
        exist_res[98] = "(((?v77B77->A77)->((?v77B77->(A77->C77))->(?v77B77->C77)))->(A77->((?v77B77->A77)->((?v77B77->(A77->C77))->(?v77B77->C77)))))";
        exist_res[99] = "((?v77B77->A77)->((?v77B77->(A77->C77))->(?v77B77->C77)))";
        exist_res[100] = "(A77->((?v77B77->A77)->((?v77B77->(A77->C77))->(?v77B77->C77))))";
        exist_res[101] = "((A77->(?v77B77->A77))->((A77->((?v77B77->A77)->((?v77B77->(A77->C77))->(?v77B77->C77))))->(A77->((?v77B77->(A77->C77))->(?v77B77->C77)))))";
        exist_res[102] = "((A77->((?v77B77->A77)->((?v77B77->(A77->C77))->(?v77B77->C77))))->(A77->((?v77B77->(A77->C77))->(?v77B77->C77))))";
        exist_res[103] = "(A77->((?v77B77->(A77->C77))->(?v77B77->C77)))";
        exist_res[104] = "((A77->(?v77B77->(A77->C77)))->((A77->((?v77B77->(A77->C77))->(?v77B77->C77)))->(A77->(?v77B77->C77))))";
        exist_res[105] = "((A77->((?v77B77->(A77->C77))->(?v77B77->C77)))->(A77->(?v77B77->C77)))";
        exist_res[106] = "(A77->(?v77B77->C77))";
    }

    public static final String IMPLICATION = "Operations.Impl";
    public static final String CONJUCNTION = "Conj";
    public static final String DISJUCNTION = "Disj";
    public static final String EQUALITY = "Equal";
    public static final String NEGATION = "Neg";
    public static final String FORALL = "Forall";
    public static final String EXIST = "Exist";
    public static final String INCREMENT = "Incr";
    public static final String BRACKETS = "Brackets";
    public static final String PREDICATE = "Predicate";
    public static final String TERMWITHARGS = "TermWithArgs";
    public static final String VARIABLE = "Var";
    public static final String PLUS = "Plus";
    public static final String MULTIPLY= "Mul";
    public static final String INCORRECT_INPUT = "Вывод некорректен начиная с формулы номер ";

}
